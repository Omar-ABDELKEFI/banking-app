version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: banking-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bankingdb?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - mysql
    networks:
      - banking-network
    volumes:
      - ./backend/uploads:/app/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: banking-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - banking-network

  mysql:
    image: mysql:8.0
    container_name: banking-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=bankingdb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - banking-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: banking-phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - banking-network

  sonarqube:
    image: sonarqube:community
    container_name: banking-sonarqube
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    depends_on:
      - sonarqube-db
    networks:
      - banking-network

  sonarqube-db:
    image: postgres:12
    container_name: banking-sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - banking-network

networks:
  banking-network:
    driver: bridge

volumes:
  mysql_data:
  postgresql_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: